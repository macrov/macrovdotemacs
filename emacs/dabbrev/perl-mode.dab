$ARGV
%ENV
%INC
%OVERLOAD
%SIG
=back
=cut
=head1
=head2
=head3
=item
=over
=pod
=~
>=
>>
>>=
@ARGV
@EXPORT
@EXPORT_OK
@INC
@ISA
@_
ARGV
ARGVOUT
AUTOLOAD
BEGIN
CHECK
CORE::
DATA
DESTROY
END
ENV
EQ
EXPORT
EXPORT_OK
GE
GT
HOME
INC
INIT
ISA
LE
LOGDIR
LT
NE
OVERLOAD
PATH
PERL5DB
PERL5LIB
PERLLIB
SIG
STDERR
STDIN
STDOUT
SUPER
SUPER::
__END__
__FILE__
__LINE__
__PACKAGE__
abs
accept
alarm
and
atan2
bind
binmode
bless
caller
chdir
chmod
chomp
chop
chown
chr
chroot
close
closedir
cmp
connect
continue
cos
crypt
dbmclose
dbmopen
defined
delete
die
do
dump
each
else
elsif
endgrent
endhostent
endnetent
endprotoent
endpwent
endservent
eof
eq
eval
exec
exists
exit
exp
fcntl
fileno
flock
for
foreach
fork
format
formline
ge
getc
getgrent
getgrgid
getgrnam
gethostbyaddr
gethostbyname
gethostent
getlogin
getnetbyaddr
getnetbyname
getnetent
getpeername
getpgrp
getppid
getpriority
getprotobyname
getprotobynumber
getprotoent
getpwend
getpwent
getpwnam
getpwuid
getservbyname
getservbyport
getservent
getsockname
getsockopt
glob
gmtime
goto
grep
group
gt
hex
hosts
if
import
index
int
ioctl
join
keys
kill
last
lc
lcfirst
le
length
link
listen
local
localtime
log
lstat
lt
m//
map
mkdir
msgctl
msgget
msgrcv
msgsnd
my
ne
networks
next
no
not
npt
oct
open
opendir
or
ord
our
pack
package
passwd
pipe
pop
pos
print
printf
protocols
prototype
push
qq//
qr//
quotemeta
qw//
qx//
rand
read
readdir
readline
readlink
readpipe
recv
redo
ref
rename
require
reset
return
reverse
rewinddir
rewindir
rindex
rmdir
scalar
seek
seekdir
select
self
semctl
semget
semop
send
services
setgrent
sethostent
setnetent
setpgrp
setpriority
setprotoent
setpwent
setservent
setsockopt
shift
shmctl
shmget
shmread
shmwrite
shutdown
sin
sleep
socket
socketpair
sort
splice
split
sprintf
sqrt
srand
stat
study
sub
substr
symlink
syscall
sysopen
sysread
sysseek
system
syswrite
tell
telldir
tie
tied
time
times
tr
tr///
truncate
uc
ucfirst
umask
undef
unless
unlink
unpack
unshift
untie
until
use
utime
values
vec
wait
waitpid
wantarray
warn
while
write
xor
