FORM="FORMATTED"
FORM="UNFORMATTED"
ACCESS="SEQUENTIAL"
ACCESS="DIRECT"
STATUS="OLD"
STATUS="NEW"
OPEN(UNIT=, FILE="", ACCESS="", STATUS="", FORM="")
%DESCR
%FILL
%LOC
%REF
%VAL
.AND.
.EQ.
.EQV.
.FALSE.
.GE.
.GT.
.LE.
.LT.
.NE.
.NEQV.
.NOT.
.OR.
.TRUE.
.XOR.
ABS
ACCEPT
ACCESS
ACHAR
ACOS
ACOSD
ACTION
ADJUSTL
ADJUSTR
ADVANCE
AIMAG
AIMAX0
AIMIN0
AINT
AJMAX0
AJMIN0
AKMAX0
AKMIN0
ALIAS
ALIGN
ALL
ALLOCATABLE
ALLOCATE
ALLOCATED
ALOG
ALOG10
AMAX0
AMAX1
AMIN0
AMIN1
AMOD
AND
ANINT
ANY
APOSTROPHE
APPEND
ASIN
ASIND
ASIS
ASM
ASSIGN
ASSIGNMENT
ASSOCIATED
ASSOCIATEVARIABLE
ASSUMEOPTIONS
ATAN
ATAN2
ATAN2D
ATAND
ATTRIBUTES
AUTOMATIC
BACK
BACKSPACE
BIG_ENDIAN
BINARY
BITEST
BIT_SIZE
BJTEST
BKTEST
BLANK
BLOCK
DATA
BLOCKDATA
BLOCKSIZE
BTEST
BUFFERCOUNT
BYTE
CABS
CALL
CARRIAGECONTROL
CASE
DEFAULT
CCOS
CDABS
CDCOS
CDEXP
CDLOG
CDSIN
CDSQRT
CEILING
CEXP
CHAR
CHARACTER
CHECK
CLOG
CLOSE
CMPLX
COMMON
CONJG
CONTAINS
CONTINUE
CONVERT
COS
COSD
COSH
COTAN
COUNT
CPU_TIME
CRAY
CSHIFT
CSIN
CSQRT
CYCLE
CYCLIC
DABS
DACOS
DACOSD
DASIN
DASIND
DASM
DATAN
DATAN2
DATAN2D
DATAND
DATE
DATE_AND_TIME
DBLE
DCMPLX
DCONJG
DCOS
DCOSD
DCOSH
DCOTAN
DDIM
DEALLOCATE
DECLARE
DECODE
DEFAULTFILE
DEFINE
FILE
DELETE
DELIM
DENYNONE
DENYRD
DENYRW
DENYWR
DEXP
DFAUTO
DFCOM
DFLOAT
DFLOTI
DFLOTJ
DFLOTK
DIGITS
DIM
DIMAG
DIMENSION
DINT
DIR
DIRECT
DIRX
DISPOSE
DISTRIBUTE
DLLEXPORT
DLLIMPORT
DLOG
DLOG10
DMAX1
DMIN1
DMOD
DNINT
DO
WHILE
DOT
DOT_PRODUCT
DOUBLE
COMPLEX
DOUBLE
PRECISION
DPROD
DR
DREAL
DRX
DSIGN
DSIN
DSIND
DSINH
DSQRT
DTAN
DTAND
DTANH
ELEMENTAL
ELSE
ELSE
IF
ELSEIF
ELSEWHERE
EN
ENCODE
END
DO
END
IF
ENDFILE
ENDIF
ENTRY
EOF
EOR
EOSHIFT
EPSILON
EQUIVALENCE
ERR
ERRSNS
ES
EXIST
EXIT
EXP
EXPONENT
EXTENDSIZE
EXTEND_SOURCE
EXTERN
EXTERNAL
EXTRINSIC
FALSE
FASM
FDX
FGX
FIND
FIPS
FIXED
FIXEDFORMLINESIZE
FLOAT
FLOATI
FLOATJ
FLOATK
FLOOR
FMT
FORALL
FORM
FORMAT
FORMATTED
FORTRAN
FP_CLASS
FRACTION
FREE
FREEFORM
FUNCTION
GO
TO
G_FLOATING
HFIX
HUGE
IABS
IACHAR
IAND
IARGCOUNT
IARGPTR
IBCHNG
IBCLR
IBITS
IBSET
ICHAR
IDATE
IDENT
IDIM
IDINT
IDNINT
IEOR
IF
DEFINED
IFIX
IIABS
IIAND
IIBCLR
IIBITS
IIBSET
IIDIM
IIDINT
IIDNNT
IIEOR
IIFIX
IINT
IIOR
IIQINT
IIQNNT
IISHFT
IISHFTC
IISIGN
ILEN
IMAG
IMAX0
IMAX1
IMIN0
IMIN1
IMOD
IMPLICIT
IMPLICIT
NONE
INCLUDE
INDEPENDENT
INDEX
INDEXED
INHERIT
ININT
INITIALSIZE
INOT
INQUIRE
INT
INT1
INT2
INT4
INTEGER
INTENT
INTERFACE
INTRINSIC
IOFOCUS
IOR
IOSTAT
IQINT
IQNINT
ISHA
ISHC
ISHFT
ISHFTC
ISHL
ISIGN
ISNAN
IZEXT
JFIX
JIABS
JIAND
JIBCLR
JIBITS
JIBSET
JIDIM
JIDINT
JIDNNT
JIEOR
JIFIX
JINT
JIOR
JIQINT
JIQNNT
JISHFT
JISHFTC
JISIGN
JMAX0
JMAX1
JMIN0
JMIN1
JMOD
JNINT
JNOT
JZEXT
KEEP
KEY
KEYED
KEYEQ
KEYGE
KEYGT
KEYID
KEYLE
KEYLT
KEYNXT
KEYNXTNE
KIABS
KIAND
KIBCLR
KIBITS
KIBSET
KIDIM
KIDINT
KIDNNT
KIEOR
KIFIX
KIND
KINT
KIOR
KIQINT
KIQNNT
KISHFT
KISIGN
KMAX0
KMAX1
KMIN0
KMIN1
KMOD
KNINT
KNOT
KZEXT
LEADZ
LEN
LEN_TRIM
LGE
LGT
LIST
LLE
LLT
LOC
LOG
LOG10
LOGICAL
LSHIFT
MALLOC
MAP
MASK
MATMUL
MAX
MAX0
MAX1
MAXEXPONENT
MAXLOC
MAXREC
MAXVAL
MBCS
MERGE
MESSAGE
MIL
MIN
MIN0
MIN1
MINEXPONENT
MINLOC
MINVAL
MOD
MODE
MODULE
PROCEDURE
MODULO
MULT_HIGH
MVBITS
NAME
NAMED
NAMELIST
NATIVE
NEAREST
NEW
NEXTREC
NINT
NLS
NML
NOCHECK
NODECLARE
NOEXTEND_SOURCE
NOF77
NOFREEFORM
NOG_FLOATING
NOI4
NOLIST
NOSEQUENCE
NOSPANBLOCKS
NOSTRICT
NOT
NULL
NULLIFY
NUMBER
NUMBER_OF_PROCESSORS
NWORKERS
NaN
OBJCOMMENT
OLD
ONLY
ONTO
OPEN
OPENED
OPERATOR
OPTIONAL
OPTIONS
OR
ORGANIZATION
PACK
PAD
PARAMETER
PAUSE
POINTER
POPCNT
POPPAR
POSITION
PRESENT
PRINT
PRIVATE
PROCESSORS
PROCESSORS_SHAPE
PRODUCT
PROGRAM
PSECT
PUBLIC
PURE
QABS
QACOS
QACOSD
QASIN
QASIND
QATAN
QATAN2
QATAN2D
QATAND
QCOS
QCOSD
QCOSH
QDIM
QEXP
QEXT
QEXTD
QFLOAT
QINT
QLOG
QLOG10
QMAX1
QMIN1
QMOD
QNINT
QSIGN
QSIN
QSIND
QSINH
QSQRT
QTAN
QTAND
QTANH
QUOTE
RADIX
RAN
RANDOM_NUMBER
RANDOM_SEED
RANDU
RANGE
READ
READONLY
READWRITE
REAL
REC
RECL
RECORD
RECORDSIZE
RECORDTYPE
RECURSIVE
REFERENCE
RELATIVE
REPEAT
REPLACE
RESHAPE
RESULT
RETURN
REWIND
REWRITE
RRSPACING
RSHIFT
SAVE
SCALE
SCAN
SCRATCH
SECNDS
SEGMENTED
SELECT
CASE
SELECTED_INT_KIND
SELECTED_REAL_KIND
SEQUENCE
SEQUENTIAL
SET_EXPONENT
SHAPE
SHARE
SHARED
SIGN
SIN
SIND
SINH
SIZE
SIZEOF
SNGL
SNGLQ
SPACING
SPREAD
SQRT
STATIC
STATUS
STDCALL
STOP
STREAM
STREAM_CR
STREAM_LF
STRICT
STRUCTURE
SUBMIT
SUBROUTINE
SUBTITLE
SUM
SYSTEM_CLOCK
TAN
TAND
TANH
TARGET
TEMPLATE
TIME
TINY
TITLE
TL
TR
TRAILZ
TRANSFER
TRANSPOSE
TRIM
TRUE
TYPE
UBOUND
ULTRIX
UNDEFINE
UNDEFINED
UNFORMATTED
UNION
UNIT
UNKNOWN
UNLOCK
UNPACK
USE
USEROPEN
VALUE
VARIABLE
VARYING
VAXD
VAXG
VERIFY
VIRTUAL
VOLATILE
WHERE
WRITE
XOR
ZABS
ZCOS
ZERO
ZEXP
ZEXT
ZLOG
ZSIN
ZSQRT

MPI_ABORT(comm, errorcode)
MPI_ADDRESS(location, address)
MPI_ALLGATHER(sendbuf, sendcount, sendtype, recvbuf, recvcount, recvtype, comm)
MPI_ALLREDUCE(sendbuf, recvbuf, count, datatype, op, comm)
MPI_ALLTOALL(sendbuf, sendcount, sendtype, recvbuf, recvcount, recvtype, comm)
MPI_ATTR_DELETE(comm, keyval)
MPI_BARRIER(comm)
MPI_BCAST(buffer, count, datatype, root, comm)
MPI_BSEND (buf, count, datatype, dest, tag, comm)
MPI_BSEND_INIT(buf, count, datatype, dest, tag, comm, request)
MPI_BUFFER_ATTACH(buffer, size)
MPI_CANCEL(request)
MPI_CARTDIM_GET(comm, ndims)
MPI_CART_CREATE(comm_old, ndims, dims, periods, reorder, comm_cart)
MPI_CART_GET(comm, maxdims, dims, periods, coords)
MPI_CART_MAP(comm, ndims, dims, periods, newrank)
MPI_CART_RANK(comm, coords, rank)
MPI_CART_SHIFT(comm, direction, disp, rank_source, rank_dest)
MPI_CART_SUB(comm, remain_dims, newcomm)
MPI_COMM_COMPARE(comm1, comm2, result)
MPI_COMM_CREATE(comm, group, newcomm)
MPI_COMM_FREE(comm)
MPI_COMM_GROUP(comm, group)
MPI_COMM_RANK(comm, rank)
MPI_COMM_REMOTE_GROUP(comm, group)
MPI_COMM_SIZE(comm, size)
MPI_COMM_SPLIT(comm, color, key, newcomm)
MPI_COMM_TEST_INTER(comm, flag)
MPI_DIMS_CREATE(nnodes, ndims, dims)
MPI_ERRHANDLER_CREATE(function, errhandler)
MPI_ERROR_CLASS(errorcode, errorclass)
MPI_ERROR_STRING(errorcode, string, resultlen)
MPI_FINALIZE()
MPI_GATHER(sendbuf, sendcount, sendtype, recvbuf, recvcount, recvtype, root, comm)
MPI_GET_COUNT(status, datatype, count)
MPI_GET_ELEMENTS(status, datatype, count)
MPI_GET_PROCESSOR_NAME(name, resultlen)
MPI_GRAPHDIMS_GET(comm, nnodes, nedges)
MPI_GRAPH_CREATE(comm_old, nnodes, index, edges, reorder, comm_graph)
MPI_GRAPH_GET(comm, maxindex, maxedges, index, edges)
MPI_GRAPH_MAP(comm, nnodes, index, edges, newrank)
MPI_GRAPH_NEIGHBORS(comm, rank, maxneighbors, neighbors)
MPI_GROUP_COMPARE(group1, group2, result)
MPI_GROUP_DIFFERENCE(group1, group2, newgroup)
MPI_GROUP_FREE(group)
MPI_GROUP_INCL(group, n, ranks, newgroup)
MPI_GROUP_RANK(group, rank)
MPI_GROUP_UNION(group1, group2, newgroup)
MPI_IBSEND(buf, count, datatype, dest, tag, comm, request)
MPI_INIT()
MPI_INTERCOMM_CREATE(local_comm, local_leader, peer_comm, remote_leader, tag, newintercomm)
MPI_IPROBE(source, tag, comm, flag, status)
MPI_IRECV (buf, count, datatype, source, tag, comm, request)
MPI_KEYVAL_CREATE(copy_fn, delete_fn, keyval, extra_state)
MPI_OP_CREATE(function, commute, op)
MPI_PACK(inbuf, incount, datatype, outbuf, outsize, position, comm)
MPI_PCONTROL(level, ...)
MPI_PROBE(source, tag, comm, status)
MPI_RECV (buf, count, datatype, source, tag, comm, status)
MPI_RECV_INIT(buf, count, datatype, source, tag, comm, request)
MPI_REDUCE(sendbuf, recvbuf, count, datatype, op, root, comm)
MPI_REDUCE_SCATTER(sendbuf, recvbuf, recvcounts, datatype, op, comm)
MPI_REQUEST_FREE(request)
MPI_RSEND (buf, count, datatype, dest, tag, comm)
MPI_RSEND_INIT(buf, count, datatype, dest, tag, comm, request)
MPI_SCAN(sendbuf, recvbuf, count, datatype, op, comm)
MPI_SCATTER(sendbuf, sendcount, sendtype, recvbuf, recvcount, recvtype, root, comm)
MPI_SEND(buf, count, datatype, dest, tag, comm)
MPI_SENDRECV(sendbuf, sendcount, sendtype, dest, sendtag, recvbuf, recvcount, recvtype, source, recvtag, comm, status)
MPI_SEND_INIT(buf, count, datatype, dest, tag, comm, request)
MPI_SSEND (buf, count, datatype, dest, tag, comm)
MPI_SSEND_INIT(buf, count, datatype, dest, tag, comm, request)
MPI_TEST(request, flag, status)
MPI_TESTALL(count, array_of_requests, flag, array_of_statuses)
MPI_TEST_CANCELLED(status, flag)
MPI_TOPO_TEST(comm, status)
MPI_TYPE_COMMIT(datatype)
MPI_TYPE_CONTIGUOUS(count, oldtype, newtype)
MPI_TYPE_EXTENT(datatype, extent)
MPI_TYPE_FREE(datatype)
MPI_TYPE_HINDEXED(count, array_of_blocklengths, array_of_displacements, oldtype, newtype)
MPI_TYPE_LB(datatype, displacement)
MPI_TYPE_SIZE(datatype, size)
MPI_TYPE_STRUCT(count, array_of_blocklengths, array_of_displacements, array_of_types, newtype)
MPI_TYPE_UB(datatype, displacement)
MPI_TYPE_VECTOR(count, blocklength, stride, oldtype, newtype)
MPI_UNPACK(inbuf, insize, position, outbuf, outcount, datatype, comm)
MPI_WAIT(request, status)
MPI_WAITALL(count, array_of_requests, array_of_statuses)
MPI_WTICK()