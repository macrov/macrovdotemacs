;;引入网络配置
;;(load-file "/home/backfire/macrovdotemacs/net/netel")



;;简单的小配置，让emacs更舒服

;bindding the windows enlarge&shrink to C-F11&F12

(global-set-key [(ctrl f12)] 'shrink-window-horizontally)
(global-set-key [(ctrl f11)] 'enlarge-window-horizontally)

;; always show line numbers
(global-linum-mode 1)

;;启用最近打开的功能
(require 'recentf)
(recentf-mode t)


;;set the title bar 让标题栏显示点有用的信息
(setq frame-title-format "emacs@%b")

;;光标靠近鼠标鼠标自动移开
(mouse-avoidance-mode 'animate)

;;配置ibus
(ibus-mode t)

;;全局剪切板
(setq x-select-enable-clipboard t)

;鼠标滚轮，默认的滚动太快，这里改为3行
(defun up-slightly () (interactive) (scroll-up 3))
(defun down-slightly () (interactive) (scroll-down 3))
(global-set-key [mouse-4] 'down-slightly)
(global-set-key [mouse-5] 'up-slightly)



;;全屏功能 跟gnome相符，绑在F11上
(global-set-key [(f11)] 'fullscreen)
(defun fullscreen ()
  (interactive)
  (x-send-client-message nil 0 nil "_NET_WM_STATE" 32
    '(2 "_NET_WM_STATE_FULLSCREEN" 0)))



;;关闭自动备份和自动保存，就是"文件名~"和"#文件名#"这样的文件。
(setq make-backup-files nil) ; stop creating those backup~ files关闭备份和自动保存
(setq auto-save-default nil) ; stop creating those #autosave# files



;; config for auto-complete
(add-to-list 'load-path "~/emacs/auto-complete")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/emacs/auto-complete/ac-dict")
(ac-config-default)

;; config for gtags-mode

(global-set-key [(f5)] 'gtags-mode)

;;config for cscope

;(add-to-list 'load-path "~/emacs/cscope")
;(require 'xcscope)


(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(ecb-layout-window-sizes (quote (("left8" (0.16326530612244897 . 0.2727272727272727) (0.16326530612244897 . 0.22727272727272727) (0.16326530612244897 . 0.29545454545454547) (0.16326530612244897 . 0.18181818181818182)))))
 '(ecb-options-version "2.40")
 '(ecb-source-path (quote ("/home/backfire/work/android-rocket-d140a")))
 '(ecb-windows-width 0.23)
 '(inhibit-startup-screen t)
 '(linum-mode nil t)
 '(make-backup-files nil))
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 )

(global-set-key [(f4)] 'ecb-activate)


(global-set-key [(f6)] 'emacs-lisp-mode)

;;set tabbar 页签功能，需要tabbar.el
(add-to-list 'load-path "~/emacs/tabbar")
(require 'tabbar)
(tabbar-mode)
;;(global-set-key [(meta right)] 'tabbar-backward-group)
;;(global-set-key [(meta left)] 'tabbar-forward-group)
(global-set-key [(meta prior)] 'tabbar-backward)
(global-set-key [(meta next)] 'tabbar-forward)




;;终端模式下去掉菜单
(if (equal window-system nil)
(menu-bar-mode nil))




;;透明设定，ubuntu下不好用，gnome貌似是不支持了
  
(global-set-key [f9] 'loop-alpha)  ;;全局绑定F12键为Emacs半透明功能键
(setq alpha-list '((85 50) (100 100)))  ;;当前窗口和非当前窗口时透明度分别为85、50
(defun loop-alpha ()
    (interactive)
    (let ((h (car alpha-list)))
        ((lambda (a ab)
             (set-frame-parameter (selected-frame) 'alpha (list a ab))
             (add-to-list 'default-frame-alist (cons 'alpha (list a ab))))
         (car h) (car (cdr h)))
        (setq alpha-list (cdr (append alpha-list (list h))))))





;;配置cedet
(add-to-list 'load-path "~/emacs/cedet-1.0pre7/common")
(add-to-list 'load-path "~/emacs/cedet-1.0pre7/contrib")
;;(load-file "~/emacs/cedet-1.0pre7/common/cedet.el")
(require 'cedet)
(require 'semantic-ia)
(global-ede-mode 1)                      ; Enable the Project management system
(semantic-load-enable-code-helpers)      ; Enable prototype help and smart completion 
(global-srecode-minor-mode 1)            ; Enable template insertion menu
(require 'semantic-tag-folding nil 'noerror)
(global-semantic-tag-folding-mode 1)
(global-set-key [f12] 'semantic-ia-fast-jump)
(global-set-key [S-f12]
                (lambda ()
                  (interactive)
                  (if (ring-empty-p (oref semantic-mru-bookmark-ring ring))
                      (error "Semantic Bookmark ring is currently empty"))
                  (let* ((ring (oref semantic-mru-bookmark-ring ring))
                         (alist (semantic-mrub-ring-to-assoc-list ring))
                         (first (cdr (car alist))))
                    (if (semantic-equivalent-tag-p (oref first tag)
                                                   (semantic-current-tag))
                        (setq first (cdr (car (cdr alist)))))
                    (semantic-mrub-switch-tags first))))
;(define-key c-mode-map [M-S-f12] 'semantic-analyze-proto-impl-toggle)
(global-set-key (kbd "M-q") 'semantic-ia-complete-symbol-menu)
(define-key semantic-tag-folding-mode-map (kbd "C-c , -") 'semantic-tag-folding-fold-block)
(define-key semantic-tag-folding-mode-map (kbd "C-c , +") 'semantic-tag-folding-show-block)
(define-key semantic-tag-folding-mode-map (kbd "C-_") 'semantic-tag-folding-fold-all)
(define-key semantic-tag-folding-mode-map (kbd "C-+") 'semantic-tag-folding-show-all)


;; (setq semanticdb-project-roots (list (expand-file-name "/")))
(defconst cedet-user-include-dirs
  (list 
   "/home/backfire/work/android-rocket-d140a/kernel/include"
   "/home/backfire/work/android-rocket-d140a/kernel/arch/arm/include"
   "/home/backfire/work/android-rocket-d140a/kernel/arch/arm/mach-rk29/include"
   ""))
;; (defconst cedet-win32-include-dirs
;;   (list "C:/MinGW/include"
;;         "C:/MinGW/include/c++/3.4.5"
;;         "C:/MinGW/include/c++/3.4.5/mingw32"
;;         "C:/MinGW/include/c++/3.4.5/backward"
;;         "C:/MinGW/lib/gcc/mingw32/3.4.5/include"
;;         "C:/Program Files/Microsoft Visual Studio/VC98/MFC/Include"))
(require 'semantic-c nil 'noerror)
(let ((include-dirs cedet-user-include-dirs))
  ;; (when (eq system-type 'windows-nt)
  ;;   (setq include-dirs (append include-dirs cedet-win32-include-dirs)))
  (mapc (lambda (dir)
          (semantic-add-system-include dir 'c++-mode)
          (semantic-add-system-include dir 'c-mode))
        include-dirs))


;;配置ecb
(add-to-list 'load-path "~/emacs/ecb-2.40")
(require 'ecb)
;; 各窗口间切换
(global-set-key [C-left] 'windmove-left)
(global-set-key [C-right] 'windmove-right)
(global-set-key [C-up] 'windmove-up)
(global-set-key [C-down] 'windmove-down)
 
;; 隐藏和显示ecb窗口
(define-key global-map [(control f1)] 'ecb-hide-ecb-windows)
(define-key global-map [(control f2)] 'ecb-show-ecb-windows)
 
;; 使某一ecb窗口最大化
;(define-key global-map "/C-c1" 'ecb-maximize-window-directories)
;(define-key global-map "/C-c2" 'ecb-maximize-window-sources)
;(define-key global-map "/C-c3" 'ecb-maximize-window-methods)
;(define-key global-map "/C-c4" 'ecb-maximize-window-history)
;; 恢复原始窗口布局
;(define-key global-map "/C-c`" 'ecb-restore-default-window-sizes)


;;配置w3m
;;(add-to-list 'load-path "~/emacs/w3m")
;;(require 'w3m)
;;(setq w3m-default-display-inline-images t)




;;配置自己的info路径
;;(add-to-list `Info-directory-list "~/info") 这个是23之前版本的配置方式
(add-to-list `Info-default-directory-list "~/info/lispintro")
(add-to-list `Info-default-directory-list "~/info/gnu-global")


;;配置gtags
(add-to-list 'load-path "~/emacs/global")
;(autoload 'gtags-mode "gtags" "" t)
;(setq c-mode-hook '(lambda ()
;		     (gtags-mode 1)))
(global-set-key (kbd "C-c g f") 'gtags-find-tag)
(global-set-key (kbd "C-c g p") 'gtags-pop-stack)
(global-set-key (kbd "C-c g s") 'gtags-select-tag)

;;set the cscope
(add-to-list 'load-path "~/emacs/cscope")
(require 'xcscope)

;;配置showtip.el
(add-to-list 'load-path "~/emacs/showtip")
(require 'showtip)

;;配置sdcv.el
(add-to-list 'load-path "~/emacs/sdcv")
(require 'sdcv)
(global-set-key [(meta p)] 'sdcv-search-input+)
;;(global-set-key (kbd "M s") 'sdcv-search-pointer+)
;;(global-set-key (kbd "M S") 'sdcv-search-input)

